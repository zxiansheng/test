<!DOCTYPE html>
<head>
    <meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script src="jquery-1.11.1.min.js"></script>
    <title>client</title>
</head>
<body>
    <input type="button" id='test' value='点我测试' />
    <script type="text/javascript">
        $(function(){
            //websocket测试服务器
            var url = "ws://127.0.0.1:8080";
            var ws = null;
            function createws(){
                if('WebSocket' in window)
                    ws = new WebSocket(url);
                else if('MOzWebSocket' in window)
                    ws = new MozWebSocket(url);
                else
                    console.log("浏览器太旧，不支持");
            }

            function btnfun(){
                createws();
                //成功建立WebSocket连接时触发onopen事件，通常客户端发送数据都是放在open事件里面
                ws.onopen = function(){
                    console.log("connected");
                    ws.send("hello world");
                    heartCheck.start();// 心跳监测
                };
                //接受服务器响应数据时触发onmessage事件
                ws.onmessage = function(event){
                    console.log("receive message:"+event.data);
                    heartCheck.reset(); // 重置心跳检测
                    //关闭websocket连接
//                    ws.close(999,"close normal");
                };
                //服务器处理异常，通常在服务器里try-catch发生异常时或者连接异常时触发onerror事件
                ws.onerror = function(err){
                    console.log("error: "+err);
                    reconnect();
                    ws.close(1000,"close after error");
                };
                //websocket连接关闭时触发onclose事件
                ws.onclose = function(event){
                    console.log("close reason: "+event.reason);
                };
            };
            //为button绑定事件
            $("#test").click(btnfun);

            // 心跳检测
            var heartCheck = {
                timeout: 3000,//60ms
                timeoutObj: null,
                serverTimeoutObj: null,
                reset: function(){
                    clearTimeout(this.timeoutObj);
                    clearTimeout(this.serverTimeoutObj);
                    this.start();
                },
                start: function(){
                    var self = this;
                    this.timeoutObj = setTimeout(function(){
                        ws.send("Heart Beat" + "  " + getNowDate());
                        self.serverTimeoutObj = setTimeout(function(){
                            ws.close();//如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次
                        }, self.timeout)
                    }, this.timeout)
                },
            }



            // 获取时间
            function getNowDate() {
                var date = new Date();
                var sign1 = "-";
                var sign2 = ":";
                var year = date.getFullYear() // 年
                var month = date.getMonth() + 1; // 月
                var day  = date.getDate(); // 日
                var hour = date.getHours(); // 时
                var minutes = date.getMinutes(); // 分
                var seconds = date.getSeconds() //秒
                var weekArr = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];
                var week = weekArr[date.getDay()];
                // 给一位数数据前面加 “0”
                if (month >= 1 && month <= 9) {
                    month = "0" + month;
                }
                if (day >= 0 && day <= 9) {
                    day = "0" + day;
                }
                if (hour >= 0 && hour <= 9) {
                    hour = "0" + hour;
                }
                if (minutes >= 0 && minutes <= 9) {
                    minutes = "0" + minutes;
                }
                if (seconds >= 0 && seconds <= 9) {
                    seconds = "0" + seconds;
                }
                var currentdate = year + sign1 + month + sign1 + day + " " + hour + sign2 + minutes + sign2 + seconds + " " + week;
                return currentdate;
            }


        });
    </script>
</body>