<!DOCTYPE html>
<head>
    <meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"/>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script src="jquery-1.11.1.min.js"></script>
    <title>client</title>
    <style>
        #scontent {
            border-style:solid;
            border-color:#ff0000 #0000ff;
        }
    </style>
</head>
<body>
    <input type="button" id='test' value='确认发送' />
    <div>
        <p>请输入内容</p><input type="text" id="sends" value="">
    </div>
    <div id="scontent">

    </div>
    <script type="text/javascript">
        $(function(){
            //为button绑定事件
            $("#test").click(btnfun);
            //websocket测试服务器
            var url = "ws://127.0.0.1:8080";
            var ws = null;

            if('WebSocket' in window) {
                ws = new WebSocket(url);
            } else if('MOzWebSocket' in window) {
                ws = new MozWebSocket(url);
            } else {
                console.log("浏览器太旧，不支持");
            }

            //成功建立WebSocket连接时触发onopen事件，通常客户端发送数据都是放在open事件里面
            ws.onopen = function(){
                console.log("connected");
                heartCheck.start();// 心跳监测
            };
            function btnfun(){
                // 获取用户输入的内容
                let msg = $('#sends').val();
                let send_smg = {uid: 2, msg: msg};
                ws.send(JSON.stringify(send_smg)); // 发送消息

            };
            //接受服务器响应数据时触发onmessage事件
            ws.onmessage = function(event){
                let revice_data = event.data;
                console.log("服务器返回数据"+revice_data);
                heartCheck.reset(); // 重置心跳检测
                //关闭websocket连接
//                    ws.close(999,"close normal");
                if(revice_data.indexOf('heartTest') === -1) {
                    revice_data = JSON.parse(revice_data);
//                        revice_data.forEach(function(ele, index){
//                            // 将接受到的消息插入到div中
//                            let one = JSON.parse(ele);
//                            let users = one.user;
//                            let msgs = one.msgs;
//                            $('#scontent').append("<li>" + '当前：' + users + ' ' + msgs + "</li>");
//                        });
                    $('#scontent').append("<li>" + '当前：' + revice_data.user + ' ' + revice_data.msgs + "</li>");
                }
            };
            //服务器处理异常，通常在服务器里try-catch发生异常时或者连接异常时触发onerror事件
            ws.onerror = function(err){
                console.log("error: "+err);
                reconnect();
                ws.close(1000,"close after error");
            };
            //websocket连接关闭时触发onclose事件
            ws.onclose = function(event){
                reconnect();
                console.log("close reason: "+event.reason);
            };

            // 心跳检测
            var heartCheck = {
                timeout: 3000,//60ms
                timeoutObj: null,
                serverTimeoutObj: null,
                reset: function(){
                    clearTimeout(this.timeoutObj);
                    clearTimeout(this.serverTimeoutObj);
                    this.start();
                },
                start: function(){
                    var self = this;
                    this.timeoutObj = setTimeout(function(){
                        ws.send("heartTest" + " " + getNowDate());
                        self.serverTimeoutObj = setTimeout(function(){
//                            ws.close();//如果onclose会执行reconnect，我们执行ws.close()就行了.如果直接执行reconnect 会触发onclose导致重连两次
                        }, self.timeout)
                    }, this.timeout)
                },
            }



            // 获取时间
            function getNowDate() {
                var date = new Date();
                var sign1 = "-";
                var sign2 = ":";
                var year = date.getFullYear() // 年
                var month = date.getMonth() + 1; // 月
                var day  = date.getDate(); // 日
                var hour = date.getHours(); // 时
                var minutes = date.getMinutes(); // 分
                var seconds = date.getSeconds() //秒
                var weekArr = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期天'];
                var week = weekArr[date.getDay()];
                // 给一位数数据前面加 “0”
                if (month >= 1 && month <= 9) {
                    month = "0" + month;
                }
                if (day >= 0 && day <= 9) {
                    day = "0" + day;
                }
                if (hour >= 0 && hour <= 9) {
                    hour = "0" + hour;
                }
                if (minutes >= 0 && minutes <= 9) {
                    minutes = "0" + minutes;
                }
                if (seconds >= 0 && seconds <= 9) {
                    seconds = "0" + seconds;
                }
                var currentdate = year + sign1 + month + sign1 + day + " " + hour + sign2 + minutes + sign2 + seconds + " " + week;
                return currentdate;
            }


        });
    </script>
</body>